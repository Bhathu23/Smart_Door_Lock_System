#include <Wire.h> 
#include <LiquidCrystal_I2C.h>
#include <Keypad.h>
#include <Servo.h>
#define Password_Length 5 

char Data[Password_Length]; 
char Master[Password_Length] = "3663"; 
byte data_count = 0, master_count = 0;
bool Pass_is_good;
char customKey;

const byte ROWS = 4;
const byte COLS = 4;

char hexaKeys[ROWS][COLS] = {
  {'1', '2', '3', 'A'},
  {'4', '5', '6', 'B'},
  {'7', '8', '9', 'C'},
  {'*', '0', '#', 'D'}
};

byte rowPins[ROWS] = {9, 8, 7, 6};
byte colPins[COLS] = {5, 4, 3, 2};

Keypad customKeypad = Keypad(makeKeymap(hexaKeys), rowPins, colPins, ROWS, COLS);

LiquidCrystal_I2C lcd(0x27, 16, 2);  




Servo myservo;  // create servo object to control a servo
// twelve servo objects can be created on most boards

int pos = 0;    // variable to store the servo position

String data2;   //Variable for storing received data

void setup(){
  Serial.begin(9600);
  
  lcd.init(); 
  lcd.backlight();
  
  pinMode(12,INPUT);  //touch sensor
  myservo.attach(13);  // attaches the servo on pin 13 to the servo object
}

void clearData(){
  while(data_count !=0){
    Data[data_count--] = 0; 
  }
  return;
}

void loop(){

  lcd.setCursor(0,0);
  lcd.print("Enter Password:");

  customKey = customKeypad.getKey();
  if (customKey){
      Data[data_count] = customKey; 
      lcd.setCursor(data_count,1); 
      lcd.print(Data[data_count]); 
      data_count++; 
  }

  if(data_count == Password_Length-1){
    lcd.clear();

    if(!strcmp(Data, Master)){
      lcd.print("Correct");
    
      for (pos = 0; pos <= 90; pos += 1) { // goes from 0 degrees to 180 degrees
        // in steps of 1 degree
        myservo.write(pos); // tell servo to go to position in variable 'pos'
        delay(5);
      }
      
      delay(5000);
          
      for (pos = 90; pos >= 0; pos -= 1) { // goes from 180 degrees to 0 degrees
        myservo.write(pos);   // tell servo to go to position in variable 'pos'
        delay(5);
      }
    }
    else{
      lcd.print("Incorrect");
      delay(1000);
    }
    
    lcd.clear();
    clearData();  
  }

 // send code through phone


  if(Serial.available() > 0){  // Send data only when you receive data:
    data2 = Serial.readString();   // read input string from bluetooth
    lcd.clear();//Read the incoming data and store it into variable data
    Serial.print(data2);        //Print Value inside data in Serial monitor
    Serial.print("\n");        //New line 
    if(data2 == "3663") {
      
      lcd.print("Correct");
      for (pos = 0; pos <= 90; pos += 1) { // goes from 0 degrees to 180 degrees
      // in steps of 1 degree
        myservo.write(pos);// tell servo to go to position in variable 'pos'
        delay(5);
      }
    
      delay(5000);
      
      for (pos = 90; pos >= 0; pos -= 1) { // goes from 180 degrees to 0 degrees
        myservo.write(pos);  // tell servo to go to position in variable 'pos'
        delay(5);
      }
    }
    else{
      lcd.print("Incorrect");
      delay(1000);
    }      
  }
  
  //touch sensor

  if(digitalRead(12)== HIGH){
    Serial.println("done");
    lcd.clear();
    lcd.print("Correct");
    for (pos = 0; pos <= 90; pos += 1) { // goes from 0 degrees to 180 degrees
      // in steps of 1 degree
      myservo.write(pos);  // tell servo to go to position in variable 'pos'
      delay(5);
    }
    
    delay(5000);
    
    for (pos = 90; pos >= 0; pos -= 1) { // goes from 180 degrees to 0 degrees
      myservo.write(pos); // tell servo to go to position in variable 'pos'
      delay(5);
    }
  }
}
